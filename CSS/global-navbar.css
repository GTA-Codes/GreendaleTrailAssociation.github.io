/* 
global navbar holds brand name on left
on right && bigger than phone, nav links
on right && phone size or smaller, menu btn
*/


.global-navbar {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: .8em;
    
    background-color: var(--surfaceLight);
}

.menu, .drawer {
    display: none;
}

@media only screen and (max-width:680px) {
    /* define some vars for later use */
    .nav-section {
        --barColor: var(--onBackgroundLight);
    }
    /* hide desktop styling: nav section's links*/
    .menu__input,
    .nav-section a {
        display: none;
    }
    /* drawer hidden by default */
    .drawer{
        display: none;
    }

    .menu {
        background-color: var(--backgroundLight);
        display: flex;
        flex-direction: column;
        gap: var(--barGap);
        width: max-content;
        position: relative;
        z-index: 9999;
        cursor: pointer;

    }

    /* || drawer */
    .drawer {
        position: absolute;
        /* z index is specified to show above the trail map page's image and cards on the about page*/
        z-index: 4;
        top: 0px;
        right: 0px;
        height: 100%;
        width: 30vw;

        background-color: var(--backgroundLight);
    }

    .drawer__list {
        display: flex;
        flex-direction: column;
        margin-top: 5rem;
    }

    .drawer__list__item {
        padding: .8em;
    }

    .drawer__list__item:hover {
        border: 1px solid;
    }

    .drawer__list__item a {
        display: block;
    }

    /* box checked show the drawer */

    .menu:has(input:checked)+.drawer {
        display: block;
    }

    /* || menu */
    /* menu before - > top bar, after is the bottom bar */
    .menu::before,
    .menu::after {
        background-color: var(--onBackgroundLight);
        content: "";
        width: var(--bar-width);
        height: var(--barHeight);
        border-radius: 9000px;
    }


    /* box checked move the menu's = */

    .menu:has(input:checked)::before {
        /* translate then rotate */
        transform: translateY(calc(var(--barGap) / 2 + var(--barHeight) / 2)) rotate(45deg);
    }

    .menu:has(input:checked)::after {
        /* translate then rotate */
        transform: translateY(calc(var(--barGap) / -2 + var(--barHeight) / -2)) rotate(-45deg);
    }
}

@keyframes openDrawerAnimation {}